<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://ez.no/API/Values" targetNamespace="http://ez.no/API/Values">
  <xsd:include schemaLocation="CommonDefinitions.xsd" />
  <xsd:include schemaLocation="FieldDefinition.xsd" />

  <xsd:complexType name="vnd.ez.api.ContentTypeInfo">
    <xsd:complexContent>
      <xsd:extension base="ref">
        <xsd:sequence>
          <xsd:element name="id" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Content type ID
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="status" type="contentTypeStatus">
            <xsd:annotation>
              <xsd:documentation>
                The status of the content type.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="identifier" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                String identifier of a content type
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="names" type="multiLanguageValuesType" />
          <xsd:element name="descriptions" type="multiLanguageValuesType" />
          <xsd:element name="creationDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:documentation>
                Creation date of the content type
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="modificationDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:documentation>
                Last modification date of the content
                type
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Creator" type="ref">
            <xsd:annotation>
              <xsd:documentation>
                The user which created the content type
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Modifier" type="ref">
            <xsd:annotation>
              <xsd:documentation>
                The user which last modified the content
                type
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Groups" type="ref">
              <xsd:annotation>
                  <xsd:documentation>
                      The groups this content type belongs to
                  </xsd:documentation>
              </xsd:annotation>
          </xsd:element>
          <xsd:element name="Draft" type="ref">
              <xsd:annotation>
                  <xsd:documentation>
                      The draft for this content type
                  </xsd:documentation>
              </xsd:annotation>
          </xsd:element>
          <xsd:element name="remoteId" type="xsd:string"
            minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                Unique remote ID of the content type
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="urlAliasSchema" type="xsd:string"
            minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                URL alias schema
                If nothing is provided,
                nameSchema will be used
                instead.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="nameSchema" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Name schema.
                Can be composed of
                FieldDefinition
                identifier place
                holders.These place
                holders must comply this
                pattern :
                &lt;field_definition_identifier&gt;.
                An OR condition can
                be used :
                &lt;field_def|other_field_def&gt;
                In this
                example, field_def will be used if available. If not,
                other_field_def will be used for content name generation
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="isContainer" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                Determines if the type is a container
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="mainLanguageCode" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Main language
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="defaultAlwaysAvailable" type="xsd:boolean"
            default="true">
            <xsd:annotation>
              <xsd:documentation>
                if an instance of acontent type is
                created the always available
                flag is set by default this
                this value.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="defaultSortField" type="sortFieldType">
            <xsd:annotation>
              <xsd:documentation>
                Specifies which property the child
                locations should be sorted on by
                default when created
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="defaultSortOrder" type="sortOrderType">
            <xsd:annotation>
              <xsd:documentation>
                Specifies whether the sort order should
                be ascending or descending by
                default when created
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="vnd.ez.api.ContentTypeInfoList">
    <xsd:complexContent>
      <xsd:extension base="ref">
        <xsd:sequence>
          <xsd:element name="ContentTypeInfo" type="vnd.ez.api.ContentTypeInfo"
            maxOccurs="unbounded" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="vnd.ez.api.ContentType">
    <xsd:complexContent>
      <xsd:extension base="vnd.ez.api.ContentTypeInfo">
        <xsd:sequence>
          <xsd:element name="FieldDefinitions" type="vnd.ez.api.FieldDefinitionList" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="vnd.ez.api.ContentTypeList">
    <xsd:complexContent>
      <xsd:extension base="ref">
        <xsd:sequence>
          <xsd:element name="ContentType" type="vnd.ez.api.ContentType" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="ContentTypeInfo" type="vnd.ez.api.ContentTypeInfo"></xsd:element>
  <xsd:element name="ContentTypeInfoList" type="vnd.ez.api.ContentTypeInfoList"></xsd:element>
  <xsd:element name="ContentType" type="vnd.ez.api.ContentType"></xsd:element>
  <xsd:element name="ContentTypeList" type="vnd.ez.api.ContentTypeList"></xsd:element>

</xsd:schema>


{# Template blocks to be used by content fields #}
{# Block naming convention is <fieldDefinitionIdentifier>_field #}
{# Following variables are passed:
 # - \eZ\Publish\API\Repository\Values\Content\Field field the field to display
 # - \eZ\Publish\API\Repository\Values\Content\ContentInfo contentInfo the contentInfo to which the field belongs to
 # - \eZ\Publish\API\Repository\Values\Content\VersionInfo versionInfo the versionInfo to which the field belongs to
 # - mixed fieldSettings settings of the field (depends on the fieldtype)
 # - array parameters options passed to ez_render_field under the parameters key
 # - array attr the attributes to add the generate HTML, contains at least a "class" entry
 #              containing <fieldtypeidentifier>-field
 #}

{% block ezstring_field %}
{% spaceless %}
    {% set field_value = field.value.text %}
    {{ block( 'simple_inline_field' ) }}
{% endspaceless %}
{% endblock %}

{% block eztext_field %}
{% spaceless %}
    {% set field_value = field.value|nl2br %}
    {{ block( 'simple_block_field' ) }}
{% endspaceless %}
{% endblock %}

{% block ezxmltext_field %}
{% spaceless %}
    {% set field_value = field.value.xml|xmltext_to_html5 %}
    {{ block( 'simple_block_field' ) }}
{% endspaceless %}
{% endblock %}

{% block ezrichtext_field %}
{% spaceless %}
    {% set field_value = field.value.xml|richtext_to_html5 %}
    {{ block( 'simple_block_field' ) }}
{% endspaceless %}
{% endblock %}

{% block ezauthor_field %}
{% spaceless %}
    {% if field.value.authors|length() > 0 %}
        <ul {{ block( 'field_attributes' ) }}>
        {% for author in field.value.authors %}
            <li><a href="mailto:{{ author.email|escape( 'url' ) }}">{{ author.name }}</a></li>
        {% endfor %}
        </ul>
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block ezcountry_field %}
{% spaceless %}
    {% if fieldSettings.isMultiple and field.value.countries|length > 0 %}
        <ul {{ block( 'field_attributes' ) }}>
            {% for country in field.value.countries %}
                <li>{{ country['Name'] }}</li>
            {% endfor %}
        </ul>
    {% elseif field.value.countries|length() == 1 %}
        <p {{ block( 'field_attributes' ) }}>
        {% for country in field.value.countries %}
            {{ country['Name'] }}
        {% endfor %}
        </p>
    {% endif %}
{% endspaceless %}
{% endblock %}

{# @todo: add translate filter #}
{% block ezboolean_field %}
{% spaceless %}
    {% set field_value = field.value.bool ? 'Yes' : 'No' %}
    {{ block( 'simple_inline_field' ) }}
{% endspaceless %}
{% endblock %}

{% block ezdatetime_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        {% if fieldSettings.useSeconds %}
            {% set field_value = field.value.value|localizeddate( 'short', 'medium', parameters.locale ) %}
        {% else %}
            {% set field_value = field.value.value|localizeddate( 'short', 'short', parameters.locale ) %}
        {% endif %}
        {{ block( 'simple_block_field' ) }}
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block ezdate_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        {% set field_value = field.value.date|localizeddate( 'short', 'none', parameters.locale ) %}
        {{ block( 'simple_block_field' ) }}
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block eztime_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        {% if fieldSettings.useSeconds %}
            {% set field_value = field.value.time|localizeddate( 'none', 'medium', parameters.locale ) %}
        {% else %}
            {% set field_value = field.value.time|localizeddate( 'none', 'short', parameters.locale ) %}
        {% endif %}
        {{ block( 'simple_block_field' ) }}
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block ezemail_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        {% set field_value = field.value.email %}
        <a href="mailto:{{ field.value.email|escape( 'url' ) }}" {{ block( 'field_attributes' ) }}>{{ field.value.email }}</a>
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block ezinteger_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        {% set field_value = field.value.value %}
        {{ block( 'simple_inline_field' ) }}
    {% endif %}
{% endspaceless %}
{% endblock %}

{# @todo: handle localization #}
{% block ezfloat_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        {% set field_value = field.value.value %}
        {{ block( 'simple_inline_field' ) }}
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block ezurl_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        <a href="{{ field.value.link }}"
            {{ block( 'field_attributes' ) }}>{{ field.value.text ? field.value.text : field.value.link }}</a>
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block ezisbn_field %}
{% spaceless %}
    {% set field_value = field.value.isbn %}
    {{ block( 'simple_inline_field' ) }}
{% endspaceless %}
{% endblock %}

{% block ezkeyword_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        <ul {{ block( 'field_attributes' ) }}>
        {% for keyword in field.value.values %}
            <li>{{ keyword }}</li>
        {% endfor %}
        </ul>
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block ezselection_field %}
{% spaceless %}
    {% if fieldSettings.isMultiple and field.value.selection|length() > 0  %}
        <ul {{ block( 'field_attributes' ) }}>
        {% for selectedIndex in field.value.selection %}
            <li>{{ fieldSettings.options[selectedIndex] }}</li>
        {% endfor %}
        </ul>
    {% elseif not fieldSettings.isMultiple %}
        {% set field_value = fieldSettings.options[field.value.selection.0] %}
        {{ block( 'simple_block_field' ) }}
    {% endif %}
{% endspaceless %}
{% endblock %}

{# @todo:
 # - add translate filter
 # - legacy used to dump is_locked attribute
 #}
{% block ezuser_field %}
{% spaceless %}
<dl {{ block( 'field_attributes' ) }}>
    <dt>User ID</dt>
    <dd>{{ field.value.contentId }}</dd>
    <dt>Username</dt>
    <dd>{{ field.value.login }}</dd>
    <dt>Email</dt>
    <dd><a href="mailto:{{ field.value.email|escape( 'url' ) }}">{{ field.value.email }}</a></dd>
    <dt>Account status</dt>
    <dd>{{ field.value.enabled ? 'enabled' : 'disabled' }}</dd>
</dl>
{% endspaceless %}
{% endblock %}

{# @todo: handle the unit of the fileSize (si operator in legacy template engine) #}
{% block ezbinaryfile_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
        {% set uri = 'content/download/' ~ contentInfo.id ~ '/' ~ field.id
                        ~ '/version/' ~ contentInfo.currentVersionNo ~  "/file/"
                        ~ field.value.fileName|escape( 'url' ) %}
        <a href="{{ path( 'ez_legacy', {'module_uri': uri} ) }}"
            {{ block( 'field_attributes' ) }}>{{ field.value.fileName }}</a>&nbsp;({{ field.value.fileSize|ez_file_size( 1 ) }})
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block ezmedia_field %}
{% if not ez_is_field_empty( content, field ) %}
{% spaceless %}
    {% set type = fieldSettings.mediaType %}
    {% set value = field.value %}
    {% set uri = 'content/download/' ~ contentInfo.id ~ '/' ~ field.id
                    ~ '/' ~ value.fileName|escape( 'url' ) %}
    {% set download = path( 'ez_legacy', {'module_uri': uri } ) %}
    {% set width = value.width > 0 ? 'width="' ~ value.width ~ '"' : "" %}
    {% set height = value.height > 0 ? 'height="' ~ value.height ~ '"' : "" %}
    <div {{ block( 'field_attributes' ) }}>
    {% autoescape false %}
    {% if type == "html5_video"
        or type == "quick_time"
        or type == "windows_media_player"
        or type == "real_player" %}
        <video src="{{ download }}" {{ width }} {{ height }}
            {{ value.autoplay ? 'autoplay="autoplay"' : "" }}
            {{ value.hasController ? 'controls="controls"' : "" }}
            {{ value.loop ? 'loop="loop"' : "" }}>
            Your browser does not support html5 video.
        </video>
    {% elseif type == "html5_audio" %}
        <audio src="{{ download }}"
            {{ value.autoplay ? 'autoplay="autoplay"' : "" }}
            {{ value.hasController ? 'controls="controls"' : "" }}
            {{ value.loop ? 'loop="loop"' : "" }}
            preload="none">
            Your browser does not support html5 audio.
        </audio>
    {% elseif type == 'flash' %}
        <object type="application/x-shockwave-flash" {{ width }} {{ height }} data="{{ download }}">
            <param name="movie" value="{{ download }}" />
            <param name="play" value="{{ value.autoplay ? 'true' : 'false' }}" />
            <param name="loop" value="{{ value.loop ? 'true' : 'false' }}" />
            <param name="quality" value="{{ value.quality }}" />
        </object>
    {% elseif type == 'silverlight' %}
        <script type="text/javascript">
            function onErrorHandler(sender, args) { }
            function onResizeHandler(sender, args) { }
        </script>
        <object data="data:application/x-silverlight," type="application/x-silverlight-2" {{ width }} {{ height }}>
            <param name="source" value="{{ download }}" />
            <param name="onError" value="onErrorHandler" />
            <param name="onResize" value="onResizeHandler" />
            <a href="http://go.microsoft.com/fwlink/?LinkID=108182">
                <img src="http://go.microsoft.com/fwlink/?LinkId=108181" alt="Get Microsoft Silverlight" />
            </a>
        </object>
        <iframe style="visibility: hidden; height: 0; width: 0; border: 0px;"></iframe>
    {% endif %}
    {% endautoescape %}
    </div>
{% endspaceless %}
{% endif %}
{% endblock %}

{% block ezobjectrelationlist_field %}
{% spaceless %}
    {% if not ez_is_field_empty( content, field ) %}
    <ul {{ block( 'field_attributes' ) }}>
        {% for contentId in field.value.destinationContentIds %}
        <li>
            {{ render( controller( "ez_content:viewContent", {'contentId': contentId, 'viewType': 'embed', 'noLayout': 1} ) ) }}
        </li>
        {% endfor %}
    </ul>
    {% endif %}
{% endspaceless %}
{% endblock %}

{# @todo:
 # - include Gmaps JS only once if the field is used several times in the page
 # - add translate filter
 #}
{% block ezgmaplocation_field %}
{##
 # This field type block accepts the following parameters:
 # - string mapType the Google map type (ROADMAP, SATELLITE, HYBRID or TERRAIN), default is ROADMAP
 # - boolean showMap whether to show the Google map or not, default is true
 # - boolean showInfo whether to show the latitude, longitude and address or not, default is true
 # - integer zoom the default zoom level, default is 13
 # - boolean draggable whether to enable or not draggable map (useful on mobile / responsive layout), default is true
 # - string|false width the width of the rendered map with its unit (ie "500px" or "50em"),
 #                      set to false to not set any width style inline, default is 500px
 # - string|boolean height the height of the rendered map with its unit (ie "200px" or "20em"),
 #                         set to false to not set any height style inline, default is 200px
 #}
{% spaceless %}
<div {{ block( 'field_attributes' ) }}>
    {% set defaultWidth = '500px' %}
    {% set defaultHeight = '200px' %}
    {% set defaultShowMap = true %}
    {% set defaultShowInfo = true %}
    {% set defaultZoom = 13 %}
    {% set defaultMapType = 'ROADMAP' %}
    {% set defaultDraggable = 'true' %}

    {% set hasContent = field.value is not null %}
    {% set latitude = field.value.latitude|default( 0 ) %}
    {% set longitude = field.value.longitude|default( 0 ) %}
    {% set address = field.value.address|default( "" ) %}
    {% set mapId = "maplocation-map-" ~ field.id %}

    {% set zoom = parameters.zoom|default( defaultZoom ) %}
    {% set mapType = parameters.mapType|default( defaultMapType ) %}

    {% set mapWidth, mapHeight = defaultWidth, defaultHeight %}
    {% if parameters.width is defined %}
        {% set mapWidth = parameters.width %}
    {% endif %}

    {% if parameters.height is defined %}
        {% set mapHeight = parameters.height %}
    {% endif %}

    {% set showMap = defaultShowMap %}
    {% if parameters.showMap is defined and not parameters.showMap %}
        {% set showMap = false %}
    {% endif %}

    {% set showInfo = defaultShowInfo %}
    {% if parameters.showInfo is defined and not parameters.showInfo %}
        {% set showInfo = false %}
    {% endif %}
    
    {% set draggable = defaultDraggable %}
    {% if parameters.draggable is defined and not parameters.draggable %}
        {% set draggable = 'false' %}
    {% endif %}

    {% if showInfo %}
    <dl>
        <dt>Latitude</dt>
        <dd>{{ hasContent ? latitude : "Not set" }}</dd>
        <dt>Longitude</dt>
        <dd>{{ longitude ? longitude : "Not set" }}</dd>
        {% if address %}
        <dt>Address</dt>
        <dd>{{ address }}</dd>
        {% endif %}
    </dl>
    {% endif %}

    {% if hasContent and showMap %}
        <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=true"></script>
        <script type="text/javascript">
        (function(win, doc) {
            var mapView = function (mapId, latitude, longitude) {
                var mapElt = doc.getElementById("{{ mapId }}"),
                    startPoint = new google.maps.LatLng(latitude, longitude),
                    zoom = {{ zoom }},
                    draggable = {{ draggable }};

                new google.maps.Marker({
                    map: new google.maps.Map(mapElt, {
                        center: startPoint,
                        zoom: zoom,
                        draggable: draggable,
                        mapTypeId: google.maps.MapTypeId.{{ mapType }}
                    }),
                    position: startPoint
                });
            }
            if ( win.addEventListener ) {
                win.addEventListener(
                    'load',
                    function () {
                        mapView("{{ mapId }}", {{ latitude }}, {{ longitude }});
                    },
                    false
                );
            } else if ( win.attachEvent ) {
                win.attachEvent(
                    'onload',
                    function () {
                        mapView("{{ mapId }}", {{ latitude }}, {{ longitude }});
                    }
                );
            }
        })(window, document);
        </script>
        {% set mapStyle = mapWidth ? "width:" ~ mapWidth  ~ ";": "" %}
        {% set mapStyle =  mapHeight ? mapStyle ~ " height:" ~ mapHeight : mapStyle %}
        <div class="maplocation-map" id="{{ mapId }}" style="{{ mapStyle }}"></div>
    {% endif %}
</div>
{% endspaceless %}
{% endblock %}

{# This field accepts the following parameters:
 #   - alias (image variation name). Defaults to "original" (e.g. image originally uploaded)
 #}
{% block ezimage_field %}
{% spaceless %}
{% if not ez_is_field_empty( content, field ) %}
<figure {{ block( 'field_attributes' ) }}>
    {% set imageAlias = ez_image_alias( field, versionInfo, parameters.alias|default( 'original' ) ) %}
    <img src="{{ asset( imageAlias.uri ) }}" width="{{ imageAlias.width }}" height="{{ imageAlias.height }}" alt="{{ field.value.alternativeText }}" />
</figure>
{% endif %}
{% endspaceless %}
{% endblock %}

{% block ezobjectrelation_field %}
{% spaceless %}
{% if not ez_is_field_empty( content, field ) %}
    <div {{ block( 'field_attributes' ) }}>
        {{ render( controller( "ez_content:viewContent", {'contentId': field.value.destinationContentId, 'viewType': 'text_linked', 'noLayout': 1} ) ) }}
    </div>
{% endif %}
{% endspaceless %}
{% endblock %}

{# pageService is exposed under parameters.pageService thanks to Page\ParameterProvider #}
{% block ezpage_field %}
{% spaceless %}
{% if not ez_is_field_empty( content, field ) %}
    {% set layout = field.value.page.layout %}
    {% set template = parameters.pageService.getLayoutTemplate( layout ) %}
    {% include template with { 'zones': field.value.page.zones, 'zone_layout': layout, 'pageService': parameters.pageService } %}
{% endif %}
{% endspaceless %}
{% endblock %}


{# The simple_block_field block is a shorthand html block-based fields (like eztext or ezxmltext) #}
{# You can define a field_value variable before rendering this one if you need special operation for rendering content (i.e. nl2br) #}
{% block simple_block_field %}
{% spaceless %}
    {% set field_value = field_value|default( field.value ) %}
    <div {{ block( 'field_attributes' ) }}>
        {{ field_value|raw }}
    </div>
{% endspaceless %}
{% endblock %}

{% block simple_inline_field %}
{% spaceless %}
    {% set field_value = field_value|default( field.value ) %}
    <span {{ block( 'field_attributes' ) }}>{{ field_value }}</span>
{% endspaceless %}
{% endblock %}

{# Block for field attributes rendering. Useful to add a custom class, id or whatever HTML attribute to the field markup #}
{% block field_attributes %}
{% spaceless %}
    {% set attr = attr|default( {} ) %}
    {% for attrname, attrvalue in attr %}{{ attrname }}="{{ attrvalue }}" {% endfor %}
{% endspaceless %}
{% endblock %}

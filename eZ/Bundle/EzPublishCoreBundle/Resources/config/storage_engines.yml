parameters:
    ezpublish.api.storage_engine.in_memory.class: eZ\Publish\Core\Persistence\InMemory\Handler
    ezpublish.api.storage_engine.legacy.class: eZ\Publish\Core\Persistence\Legacy\Handler
    ezpublish.api.storage_engine.legacy.dbhandler.class: eZ\Publish\Core\Persistence\Legacy\EzcDbHandler
    ezpublish.api.storage_engine.legacy.factory.class: eZ\Bundle\EzPublishCoreBundle\ApiLoader\LegacyStorageEngineFactory
    ezpublish.api.storage_engine.legacy.dbhandler.factory.class: eZ\Bundle\EzPublishCoreBundle\ApiLoader\LegacyDbHandlerFactory
    #ezpublish.api.storage_engine.legacy.dsn: <database_type>://<user>:<password>@<host>/<database_name>
    ezpublish.api.storage_engine.legacy.defer_type_update: false

    # Legacy storage engine configuration
    # Transformation parser/compiler for search purpose

    ezpublish.api.storage_engine.legacy.pcre_compiler.class: eZ\Publish\Core\Persistence\Legacy\Content\Search\TransformationProcessor\PcreCompiler
    ezpublish.api.storage_engine.legacy.transformation_converter.class: eZ\Publish\Core\Persistence\Legacy\Content\Search\Utf8Converter

    # Using definition files:
    #
    # ezpublish.api.storage_engine.legacy.transformation_processor.class: eZ\Publish\Core\Persistence\Legacy\Content\Search\TransformationProcessor\DefinitionBased
    ezpublish.api.storage_engine.legacy.transformation_parser.class: eZ\Publish\Core\Persistence\Legacy\Content\Search\TransformationProcessor\DefinitionBased\Parser
    # # Transormation rules resources.
    # # @todo: Should they be somewhat configurable for the developer?
    ezpublish.api.storage_engine.legacy.transformation_rules.resources:
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/ascii.tr
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/basic.tr
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/cyrillic.tr
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/greek.tr
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/hebrew.tr
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/latin.tr
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/search.tr

    # Using preprocessed files:
    #
    ezpublish.api.storage_engine.legacy.transformation_processor.class: eZ\Publish\Core\Persistence\Legacy\Content\Search\TransformationProcessor\PreprocessedBased
    ezpublish.api.storage_engine.legacy.preprocessed_transformation_rules.resources:
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/ascii.tr.result
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/basic.tr.result
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/cyrillic.tr.result
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/greek.tr.result
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/hebrew.tr.result
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/latin.tr.result
        - ../vendor/ezsystems/ezpublish/eZ/Publish/Core/Persistence/Legacy/Tests/Content/SearchHandler/_fixtures/transformations/search.tr.result

    # Value converters
    ezpublish.fieldType.ezauthor.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Author
    ezpublish.fieldType.ezbinaryfile.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\BinaryFile
    ezpublish.fieldType.ezbinaryfile.storage_gateway.class: eZ\Publish\Core\FieldType\BinaryFile\BinaryFileStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezboolean.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Checkbox
    ezpublish.fieldType.ezcountry.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Country
    ezpublish.fieldType.ezdatetime.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\DateAndTime
    ezpublish.fieldType.ezemail.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\EmailAddress
    ezpublish.fieldType.ezfloat.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Float
    ezpublish.fieldType.ezgmaplocation.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\MapLocation
    ezpublish.fieldType.externalStorageHandler.ezgmaplocation.gateway.class: eZ\Publish\Core\FieldType\MapLocation\MapLocationStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezinteger.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Integer
    ezpublish.fieldType.ezimage.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Image
    ezpublish.fieldType.ezimage.storage_gateway.class: eZ\Publish\Core\FieldType\Image\ImageStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezkeyword.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Keyword
    ezpublish.fieldType.ezkeyword.storage_gateway.class: eZ\Publish\Core\FieldType\Keyword\KeywordStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezmedia.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Media
    ezpublish.fieldType.ezmedia.storage_gateway.class: eZ\Publish\Core\FieldType\Media\MediaStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezobjectrelation.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Relation
    ezpublish.fieldType.externalStorageHandler.ezobjectrelation.gateway.class: eZ\Publish\Core\FieldType\Relation\RelationStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezobjectrelationlist.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\RelationList
    ezpublish.fieldType.externalStorageHandler.ezobjectrelationlist.gateway.class: eZ\Publish\Core\FieldType\RelationList\RelationListStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezselection.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Selection
    ezpublish.fieldType.ezstring.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\TextLine
    ezpublish.fieldType.eztext.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\TextBlock
    ezpublish.fieldType.ezxmltext.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\XmlText
    ezpublish.fieldType.ezxmltext.storage_gateway.class: eZ\Publish\Core\FieldType\XmlText\XmlTextStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezsrrating.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Rating
    ezpublish.fieldType.ezurl.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Url
    ezpublish.fieldType.ezurl.storage_gateway.class: eZ\Publish\Core\FieldType\Url\UrlStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezuser.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null
    ezpublish.fieldType.ezuser.storage_gateway.class: eZ\Publish\Core\FieldType\User\UserStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezpage.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Page

    ezpublish.fieldType.eznull.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null

services:
    ezpublish.api.storage_engine.in_memory:
        class: %ezpublish.api.storage_engine.in_memory.class%
        tags:
            - {name: ezpublish.storageEngine, alias: inMemory}

    # Legacy storage engine
    ezpublish.api.storage_engine.legacy.factory:
        class: %ezpublish.api.storage_engine.legacy.factory.class%
        arguments: [@service_container]

    ezpublish.api.storage_engine.legacy.dbhandler.factory:
        class: %ezpublish.api.storage_engine.legacy.dbhandler.factory.class%
        arguments: [@ezpublish.config.resolver]

    ezpublish.api.storage_engine.legacy.dbhandler:
        class: %ezpublish.api.storage_engine.legacy.dbhandler.class%
        factory_service: ezpublish.api.storage_engine.legacy.dbhandler.factory
        factory_method: buildLegacyDbHandler

    ezpublish.api.storage_engine.legacy:
        class: %ezpublish.api.storage_engine.legacy.class%
        factory_service: ezpublish.api.storage_engine.legacy.factory
        factory_method: buildLegacyEngine
        arguments:
            - @ezpublish.api.storage_engine.legacy.dbhandler
            - %ezpublish.api.storage_engine.legacy.defer_type_update%
        tags:
            - {name: ezpublish.storageEngine, alias: legacy}

    ezpublish.api.storage_engine.legacy.transformation_parser:
        class: %ezpublish.api.storage_engine.legacy.transformation_parser.class%
        arguments: [%kernel.root_dir%]

    ezpublish.api.storage_engine.legacy.pcre_compiler:
        class: %ezpublish.api.storage_engine.legacy.pcre_compiler.class%
        arguments: [@ezpublish.api.storage_engine.legacy.transformation_converter]

    ezpublish.api.storage_engine.legacy.transformation_converter:
        class: %ezpublish.api.storage_engine.legacy.transformation_converter.class%

    ezpublish.api.storage_engine.legacy.transformation_processor:
        class: %ezpublish.api.storage_engine.legacy.transformation_processor.class%
        arguments:
            # Using definition files:
            #
            # - @ezpublish.api.storage_engine.legacy.transformation_parser
            # - @ezpublish.api.storage_engine.legacy.pcre_compiler
            # - %ezpublish.api.storage_engine.legacy.transformation_rules.resources%

            # Using preprocessed files:
            - @ezpublish.api.storage_engine.legacy.pcre_compiler
            - %kernel.root_dir%
            - %ezpublish.api.storage_engine.legacy.preprocessed_transformation_rules.resources%

    # Field type converters for legacy
    ezpublish.fieldType.ezauthor.converter:
        class: %ezpublish.fieldType.ezauthor.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezauthor, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezbinaryfile.converter:
        class: %ezpublish.fieldType.ezbinaryfile.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezbinaryfile, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezbinaryfile.storage_gateway:
        class: %ezpublish.fieldType.ezbinaryfile.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezbinaryfile, identifier: LegacyStorage}

    ezpublish.fieldType.ezboolean.converter:
        class: %ezpublish.fieldType.ezboolean.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezboolean, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezcountry.converter:
        class: %ezpublish.fieldType.ezcountry.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezcountry, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezdatetime.converter:
        class: %ezpublish.fieldType.ezdatetime.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezdatetime, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezfloat.converter:
        class: %ezpublish.fieldType.ezfloat.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezfloat, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezinteger.converter:
        class: %ezpublish.fieldType.ezinteger.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezinteger, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezkeyword.converter:
        class: %ezpublish.fieldType.ezkeyword.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezkeyword, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezkeyword.storage_gateway:
        class: %ezpublish.fieldType.ezkeyword.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezkeyword, identifier: LegacyStorage}

    ezpublish.fieldType.ezmedia.converter:
        class: %ezpublish.fieldType.ezmedia.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmedia, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmedia.storage_gateway:
        class: %ezpublish.fieldType.ezmedia.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezmedia, identifier: LegacyStorage}

    ezpublish.fieldType.ezselection.converter:
        class: %ezpublish.fieldType.ezselection.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezselection, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezstring.converter:
        class: %ezpublish.fieldType.ezstring.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezstring, lazy: true, callback: '::create'}

    ezpublish.fieldType.eztext.converter:
        class: %ezpublish.fieldType.eztext.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: eztext, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezxmltext.converter:
        class: %ezpublish.fieldType.ezxmltext.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezxmltext, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezxmltext.storage_gateway:
        class: %ezpublish.fieldType.ezxmltext.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezxmltext, identifier: LegacyStorage}

    ezpublish.fieldType.ezsrrating.converter:
        class: %ezpublish.fieldType.ezsrrating.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezsrrating, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezurl.converter:
        class: %ezpublish.fieldType.ezurl.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezurl, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezurl.storage_gateway:
        class: %ezpublish.fieldType.ezurl.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezurl, identifier: LegacyStorage}

    ezpublish.fieldType.ezpage.converter:
        class: %ezpublish.fieldType.ezpage.converter.class%
        arguments: [@ezpublish.fieldType.ezpage.pageService]
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezpage}

    ezpublish.fieldType.ezimage.converter:
        class: %ezpublish.fieldType.ezimage.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezimage, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezimage.storage_gateway:
        class: %ezpublish.fieldType.ezimage.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezimage, identifier: LegacyStorage}

    ezpublish.fieldType.ezgmaplocation.converter:
        class: %ezpublish.fieldType.ezgmaplocation.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezgmaplocation, lazy: true, callback: '::create'}

    ezpublish.fieldType.externalStorageHandler.ezgmaplocation.gateway:
        class: %ezpublish.fieldType.externalStorageHandler.ezgmaplocation.gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezgmaplocation, identifier: LegacyStorage}

    ezpublish.fieldType.ezemail.converter:
        class: %ezpublish.fieldType.ezemail.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezemail, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezobjectrelation.converter:
        class: %ezpublish.fieldType.ezobjectrelation.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezobjectrelation, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezobjectrelationlist.converter:
        class: %ezpublish.fieldType.ezobjectrelationlist.converter.class%
        arguments: [@ezpublish.api.storage_engine.legacy.dbhandler]
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezobjectrelationlist}

    ezpublish.fieldType.externalStorageHandler.ezobjectrelation.gateway:
        class: %ezpublish.fieldType.externalStorageHandler.ezobjectrelation.gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezobjectrelation, identifier: LegacyStorage}

    ezpublish.fieldType.externalStorageHandler.ezobjectrelationlist.gateway:
        class: %ezpublish.fieldType.externalStorageHandler.ezobjectrelationlist.gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezobjectrelationlist, identifier: LegacyStorage}

    ezpublish.fieldType.ezuser.converter:
        class: %ezpublish.fieldType.ezuser.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezuser, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezuser.storage_gateway:
        class: %ezpublish.fieldType.ezuser.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezuser, identifier: LegacyStorage}

    # Not implemented converters
    # Configured to use the Null converter which does not nothing
    ezpublish.fieldType.ezdate.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezdate, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezenum.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezenum, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezidentifier.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezidentifier, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezinisetting.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezinisetting, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezisbn.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezisbn, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmatrix.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmatrix, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmultioption.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmultioption, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmultioption2.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmultioption2, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmultiprice.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmultiprice, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezoption.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezoption, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezpackage.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezpackage, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezprice.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezprice, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezproductcategory.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezproductcategory, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezrangeoption.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezrangeoption, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezsubtreesubscription.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezsubtreesubscription, lazy: true, callback: '::create'}

    ezpublish.fieldType.eztime.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: eztime, lazy: true, callback: '::create'}

    # not implemented converters from extensions
    ezpublish.fieldType.ezcomcomments.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezcomcomments, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezpaex.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezpaex, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezsurvey.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezsurvey, lazy: true, callback: '::create'}

    ezpublish.fieldType.eztags.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: eztags, lazy: true, callback: '::create'}

parameters:
    ezpublish.spi.persistence.cache.class: eZ\Publish\Core\Persistence\Cache\Handler
    ezpublish.spi.persistence.cache.abstractHandler.class: eZ\Publish\Core\Persistence\Cache\AbstractHandler
    ezpublish.spi.persistence.cache.sectionHandler.class: eZ\Publish\Core\Persistence\Cache\SectionHandler
    ezpublish.spi.persistence.cache.locationHandler.class: eZ\Publish\Core\Persistence\Cache\LocationHandler
    ezpublish.spi.persistence.cache.contentHandler.class: eZ\Publish\Core\Persistence\Cache\ContentHandler
    ezpublish.spi.persistence.cache.contentLanguageHandler.class: eZ\Publish\Core\Persistence\Cache\ContentLanguageHandler
    ezpublish.spi.persistence.cache.contentTypeHandler.class: eZ\Publish\Core\Persistence\Cache\ContentTypeHandler
    ezpublish.spi.persistence.cache.userHandler.class: eZ\Publish\Core\Persistence\Cache\UserHandler
    ezpublish.spi.persistence.cache.searchHandler.class: eZ\Publish\Core\Persistence\Cache\SearchHandler
    ezpublish.spi.persistence.cache.transactionhandler.class: eZ\Publish\Core\Persistence\Cache\TransactionHandler
    ezpublish.spi.persistence.cache.trashHandler.class: eZ\Publish\Core\Persistence\Cache\TrashHandler
    ezpublish.spi.persistence.cache.locationSearchHandler.class: eZ\Publish\Core\Persistence\Cache\LocationSearchHandler
    ezpublish.spi.persistence.cache.urlAliasHandler.class: eZ\Publish\Core\Persistence\Cache\UrlAliasHandler
    ezpublish.spi.persistence.cache.persistenceLogger.class: eZ\Publish\Core\Persistence\Cache\PersistenceLogger
    # Make sure logging is only enabled for debug by default
    ezpublish.spi.persistence.cache.persistenceLogger.enableCallLogging: %kernel.debug%

    # RichText XSLT converters
    ezpublish.fieldType.ezrichtext.converter.xslt_converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\RichText\XsltConverter
    ezpublish.fieldType.ezrichtext.converter.ezxmlToDocbook.resources: %kernel.root_dir%/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Legacy/Content/FieldValue/Converter/RichText/Resources/stylesheets/ezxml_docbook.xsl
    ezpublish.fieldType.ezrichtext.converter.docbookToEzxml.resources: %kernel.root_dir%/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Legacy/Content/FieldValue/Converter/RichText/Resources/stylesheets/docbook_ezxml.xsl

    # XmlText XSD validator
    ezpublish.fieldType.ezrichtext.validator.ezxml.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\RichText\XsdValidator
    ezpublish.fieldType.ezrichtext.validator.ezxml.resources: %kernel.root_dir%/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Legacy/Content/FieldValue/Converter/RichText/Resources/schemas/ezxml.xsd

    # Value converters
    ezpublish.fieldType.ezauthor.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Author
    ezpublish.fieldType.ezbinaryfile.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\BinaryFile
    ezpublish.fieldType.ezbinaryfile.storage_gateway.class: eZ\Publish\Core\FieldType\BinaryFile\BinaryFileStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezboolean.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Checkbox
    ezpublish.fieldType.ezcountry.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Country
    ezpublish.fieldType.ezdatetime.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\DateAndTime
    ezpublish.fieldType.ezdate.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Date
    ezpublish.fieldType.eztime.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Time
    ezpublish.fieldType.ezemail.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\EmailAddress
    ezpublish.fieldType.ezfloat.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Float
    ezpublish.fieldType.ezgmaplocation.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\MapLocation
    ezpublish.fieldType.externalStorageHandler.ezgmaplocation.gateway.class: eZ\Publish\Core\FieldType\MapLocation\MapLocationStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezinteger.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Integer
    ezpublish.fieldType.ezimage.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Image
    ezpublish.fieldType.ezimage.storage_gateway.class: eZ\Publish\Core\FieldType\Image\ImageStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezisbn.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\ISBN
    ezpublish.fieldType.ezkeyword.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Keyword
    ezpublish.fieldType.ezkeyword.storage_gateway.class: eZ\Publish\Core\FieldType\Keyword\KeywordStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezmedia.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Media
    ezpublish.fieldType.ezmedia.storage_gateway.class: eZ\Publish\Core\FieldType\Media\MediaStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezobjectrelation.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Relation
    ezpublish.fieldType.ezobjectrelationlist.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\RelationList
    ezpublish.fieldType.ezselection.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Selection
    ezpublish.fieldType.ezstring.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\TextLine
    ezpublish.fieldType.eztext.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\TextBlock
    ezpublish.fieldType.ezrichtext.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\RichText
    ezpublish.fieldType.ezrichtext.storage_gateway.class: eZ\Publish\Core\FieldType\RichText\RichTextStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezxmltext.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\XmlText
    ezpublish.fieldType.ezxmltext.storage_gateway.class: eZ\Publish\Core\FieldType\XmlText\XmlTextStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezsrrating.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Rating
    ezpublish.fieldType.ezurl.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Url
    ezpublish.fieldType.ezurl.storage_gateway.class: eZ\Publish\Core\FieldType\Url\UrlStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezuser.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null
    ezpublish.fieldType.ezuser.storage_gateway.class: eZ\Publish\Core\FieldType\User\UserStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezpage.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Page
    ezpublish.fieldType.ezpage.storage_gateway.class: eZ\Publish\Core\FieldType\Page\PageStorage\Gateway\LegacyStorage
    ezpublish.fieldType.ezrecommendation.converter.class: %ezpublish.fieldType.eznull.converter.class%

    ezpublish.fieldType.eznull.converter.class: eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null

services:
    # Persistence cache & Lazy loaded storage engine factory
    ezpublish.spi.persistence.cache:
        class: %ezpublish.spi.persistence.cache.class%
        arguments:
            - @ezpublish.api.storage_engine
            - @ezpublish.spi.persistence.cache.sectionHandler
            - @ezpublish.spi.persistence.cache.locationHandler
            - @ezpublish.spi.persistence.cache.contentHandler
            - @ezpublish.spi.persistence.cache.contentLanguageHandler
            - @ezpublish.spi.persistence.cache.contentTypeHandler
            - @ezpublish.spi.persistence.cache.userHandler
            - @ezpublish.spi.persistence.cache.searchHandler
            - @ezpublish.spi.persistence.cache.transactionhandler
            - @ezpublish.spi.persistence.cache.trashHandler
            - @ezpublish.spi.persistence.cache.locationSearchHandler
            - @ezpublish.spi.persistence.cache.urlAliasHandler
            - @ezpublish.spi.persistence.cache.persistenceLogger

    ezpublish.spi.persistence.cache.persistenceLogger:
        class: %ezpublish.spi.persistence.cache.persistenceLogger.class%
        arguments:
            - %ezpublish.spi.persistence.cache.persistenceLogger.enableCallLogging%

    ezpublish.spi.persistence.cache.abstractHandler:
        class: %ezpublish.spi.persistence.cache.abstractHandler.class%
        abstract:  true
        arguments:
            - @ezpublish.cache_pool.spi.cache.decorator
            - @ezpublish.api.storage_engine
            - @ezpublish.spi.persistence.cache.persistenceLogger

    ezpublish.spi.persistence.cache.sectionHandler:
        class: %ezpublish.spi.persistence.cache.sectionHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.locationHandler:
        class: %ezpublish.spi.persistence.cache.locationHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.contentHandler:
        class: %ezpublish.spi.persistence.cache.contentHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.contentLanguageHandler:
        class: %ezpublish.spi.persistence.cache.contentLanguageHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.contentTypeHandler:
        class: %ezpublish.spi.persistence.cache.contentTypeHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.userHandler:
        class: %ezpublish.spi.persistence.cache.userHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.searchHandler:
        class: %ezpublish.spi.persistence.cache.searchHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.transactionhandler:
        class: %ezpublish.spi.persistence.cache.transactionhandler.class%
        arguments:
            - @ezpublish.cache_pool.spi.cache.decorator
            - @ezpublish.spi.persistence.legacy.transactionhandler
            - @ezpublish.spi.persistence.cache.persistenceLogger

    ezpublish.spi.persistence.cache.trashHandler:
        class: %ezpublish.spi.persistence.cache.trashHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.locationSearchHandler:
        class: %ezpublish.spi.persistence.cache.locationSearchHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.urlAliasHandler:
        class: %ezpublish.spi.persistence.cache.urlAliasHandler.class%
        parent: ezpublish.spi.persistence.cache.abstractHandler

    # Legacy storage engine

    # Alias for backend connection used by eZ Publish storage engine
    # Useful if you need to reuse it in order to access resources not related to eZ Publish, but stored in your backend (e.g. foreign DB tables)
    ezpublish.connection:
        alias: ezpublish.api.storage_engine.legacy.dbhandler

    ezpublish.api.storage_engine.legacy:
        alias: ezpublish.spi.persistence.legacy

    # Field type converters for legacy
    ezpublish.fieldType.ezauthor.converter:
        class: %ezpublish.fieldType.ezauthor.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezauthor, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezbinaryfile.converter:
        class: %ezpublish.fieldType.ezbinaryfile.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezbinaryfile, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezbinaryfile.storage_gateway:
        class: %ezpublish.fieldType.ezbinaryfile.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezbinaryfile, identifier: LegacyStorage}

    ezpublish.fieldType.ezboolean.converter:
        class: %ezpublish.fieldType.ezboolean.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezboolean, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezcountry.converter:
        class: %ezpublish.fieldType.ezcountry.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezcountry, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezdatetime.converter:
        class: %ezpublish.fieldType.ezdatetime.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezdatetime, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezfloat.converter:
        class: %ezpublish.fieldType.ezfloat.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezfloat, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezinteger.converter:
        class: %ezpublish.fieldType.ezinteger.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezinteger, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezisbn.converter:
        class: %ezpublish.fieldType.ezisbn.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezisbn, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezkeyword.converter:
        class: %ezpublish.fieldType.ezkeyword.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezkeyword, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezkeyword.storage_gateway:
        class: %ezpublish.fieldType.ezkeyword.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezkeyword, identifier: LegacyStorage}

    ezpublish.fieldType.ezmedia.converter:
        class: %ezpublish.fieldType.ezmedia.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmedia, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmedia.storage_gateway:
        class: %ezpublish.fieldType.ezmedia.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezmedia, identifier: LegacyStorage}

    ezpublish.fieldType.ezselection.converter:
        class: %ezpublish.fieldType.ezselection.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezselection, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezstring.converter:
        class: %ezpublish.fieldType.ezstring.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezstring, lazy: true, callback: '::create'}

    ezpublish.fieldType.eztext.converter:
        class: %ezpublish.fieldType.eztext.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: eztext, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezrichtext.converter:
        class: %ezpublish.fieldType.ezrichtext.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezrichtext, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezrichtext.storage_gateway:
        class: %ezpublish.fieldType.ezrichtext.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezrichtext, identifier: LegacyStorage}

    ezpublish.fieldType.ezxmltext.converter:
        class: %ezpublish.fieldType.ezxmltext.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezxmltext, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezxmltext.storage_gateway:
        class: %ezpublish.fieldType.ezxmltext.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezxmltext, identifier: LegacyStorage}

    ezpublish.fieldType.ezsrrating.converter:
        class: %ezpublish.fieldType.ezsrrating.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezsrrating, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezurl.converter:
        class: %ezpublish.fieldType.ezurl.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezurl, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezurl.storage_gateway:
        class: %ezpublish.fieldType.ezurl.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezurl, identifier: LegacyStorage}

    ezpublish.fieldType.ezpage.converter:
        class: %ezpublish.fieldType.ezpage.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezpage}

    ezpublish.fieldType.ezpage.storage_gateway:
        class: %ezpublish.fieldType.ezpage.storage_gateway.class%
        calls:
            - [setConnection, [@ezpublish.connection]]

    ezpublish.fieldType.ezimage.converter:
        class: %ezpublish.fieldType.ezimage.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezimage, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezimage.storage_gateway:
        class: %ezpublish.fieldType.ezimage.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezimage, identifier: LegacyStorage}

    ezpublish.fieldType.ezgmaplocation.converter:
        class: %ezpublish.fieldType.ezgmaplocation.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezgmaplocation, lazy: true, callback: '::create'}

    ezpublish.fieldType.externalStorageHandler.ezgmaplocation.gateway:
        class: %ezpublish.fieldType.externalStorageHandler.ezgmaplocation.gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezgmaplocation, identifier: LegacyStorage}

    ezpublish.fieldType.ezemail.converter:
        class: %ezpublish.fieldType.ezemail.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezemail, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezobjectrelation.converter:
        class: %ezpublish.fieldType.ezobjectrelation.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezobjectrelation, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezobjectrelationlist.converter:
        class: %ezpublish.fieldType.ezobjectrelationlist.converter.class%
        arguments: [@ezpublish.api.storage_engine.legacy.dbhandler]
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezobjectrelationlist}

    ezpublish.fieldType.ezuser.converter:
        class: %ezpublish.fieldType.ezuser.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezuser, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezuser.storage_gateway:
        class: %ezpublish.fieldType.ezuser.storage_gateway.class%
        tags:
            - {name: ezpublish.fieldType.externalStorageHandler.gateway, alias: ezuser, identifier: LegacyStorage}

    # Not implemented converters
    # Configured to use the Null converter which does not nothing
    ezpublish.fieldType.ezdate.converter:
        class: %ezpublish.fieldType.ezdate.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezdate, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezenum.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezenum, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezidentifier.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezidentifier, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezinisetting.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezinisetting, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezisbn.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezisbn, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmatrix.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmatrix, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmultioption.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmultioption, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmultioption2.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmultioption2, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezmultiprice.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezmultiprice, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezoption.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezoption, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezpackage.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezpackage, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezprice.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezprice, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezproductcategory.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezproductcategory, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezrangeoption.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezrangeoption, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezsubtreesubscription.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezsubtreesubscription, lazy: true, callback: '::create'}

    ezpublish.fieldType.eztime.converter:
        class: %ezpublish.fieldType.eztime.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: eztime, lazy: true, callback: '::create'}

    # not implemented converters from extensions
    ezpublish.fieldType.ezcomcomments.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezcomcomments, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezpaex.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezpaex, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezsurvey.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezsurvey, lazy: true, callback: '::create'}

    ezpublish.fieldType.eztags.converter:
        class: %ezpublish.fieldType.eznull.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: eztags, lazy: true, callback: '::create'}

    ezpublish.fieldType.ezrecommendation.converter:
        class: %ezpublish.fieldType.ezrecommendation.converter.class%
        tags:
            - {name: ezpublish.storageEngine.legacy.converter, alias: ezrecommendation, lazy: true, callback: '::create'}

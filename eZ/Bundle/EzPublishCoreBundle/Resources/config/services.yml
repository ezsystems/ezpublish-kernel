parameters:
    ezpublish.siteaccess.class: eZ\Bundle\EzPublishCoreBundle\SiteAccess
    ezpublish.siteaccess.default.name: default
    ezpublish.config.resolver.dynamic.class: eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Configuration\ConfigResolver
    ezpublish.config.resolver.chain.class: eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Configuration\ChainConfigResolver
    ezpublish.config.default_scope: ezsettings
    ezpublish.controller.base.class: eZ\Publish\Core\MVC\Symfony\Controller\Controller
    ezpublish.controller.content.view.class: eZ\Publish\Core\MVC\Symfony\Controller\Content\ViewController

services:
    # Siteaccess is injected in the container at runtime
    ezpublish.siteaccess:
        class: %ezpublish.siteaccess.class%
        arguments: [%ezpublish.siteaccess.default.name%]

    ezpublish.config.resolver.core:
        class: %ezpublish.config.resolver.dynamic.class%
        arguments: [@ezpublish.siteaccess, %ezpublish.siteaccess.groups_by_siteaccess%, @service_container, %ezpublish.config.default_scope%]
        tags:
            - { name: ezpublish.config.resolver, priority: 200 }

    ezpublish.config.resolver.chain:
        class: %ezpublish.config.resolver.chain.class%

    ezpublish.config.resolver:
        alias: ezpublish.config.resolver.chain

    ezpublish.controller.base:
        class: %ezpublish.controller.base.class%
        abstract: true
        calls:
            - [ setContainer, [@service_container] ]

    ezpublish.controller.content.view:
        class: %ezpublish.controller.content.view.class%
        arguments: [@ezpublish.view_manager]
        parent: ezpublish.controller.base
        scope: request

    # This alias allows easier management for subrequests
    # {{ render( controller( "ez_content:viewLocation", {"locationId": 123, "viewMode": "line"} ) ) }
    ez_content:
        alias: ezpublish.controller.content.view

parameters:
    ezpublish.kernel.root_dir: "%kernel.root_dir%/../vendor/ezsystems/ezpublish-kernel"

    # API
    ezpublish.api.repository.factory.class: eZ\Bundle\EzPublishCoreBundle\ApiLoader\RepositoryFactory
    ezpublish.api.storage_engine.factory.class: eZ\Bundle\EzPublishCoreBundle\ApiLoader\StorageEngineFactory
    ezpublish.api.search_engine.factory.class: eZ\Bundle\EzPublishCoreBundle\ApiLoader\SearchEngineFactory
    ezpublish.api.search_engine.indexer.factory.class: eZ\Bundle\EzPublishCoreBundle\ApiLoader\SearchEngineIndexerFactory

    # Using legacy storage engine for data compatibility with 4.x
    ezpublish.api.storage_engine.default: legacy
    ezpublish.api.search_engine.default: legacy

    ezpublish.api.content.class: eZ\Publish\Core\Repository\Values\Content\Content
    ezpublish.api.location.class: eZ\Publish\Core\Repository\Values\Content\Location
    ezpublish.api.version.class: eZ\Publish\Core\Repository\Values\Content\VersionInfo

services:
    # API
    ezpublish.api.repository.factory:
        class: "%ezpublish.api.repository.factory.class%"
        arguments:
            - "@ezpublish.config.resolver"
            - "%ezpublish.api.inner_repository.class%"
            - "%ezpublish.api.role.policy_map%"
            - "@?logger"
        calls:
            - [setContainer, ["@service_container"]]

    ezpublish.api.storage_engine.factory:
        class: "%ezpublish.api.storage_engine.factory.class%"
        arguments:
            - "@ezpublish.api.repository_configuration_provider"

    ezpublish.api.persistence_handler:
        #To disable cache, switch alias to ezpublish.api.storage_engine
        alias: ezpublish.spi.persistence.cache

    ezpublish.api.storage_engine:
        class: "%ezpublish.api.storage_engine.class%"
        factory: ["@ezpublish.api.storage_engine.factory", buildStorageEngine]
        public: false

    ezpublish.api.search_engine.factory:
        class: "%ezpublish.api.search_engine.factory.class%"
        arguments:
            - "@ezpublish.api.repository_configuration_provider"

    ezpublish.api.search_engine.indexer.factory:
            class: "%ezpublish.api.search_engine.indexer.factory.class%"
            arguments:
                - "@ezpublish.api.repository_configuration_provider"

    ezpublish.spi.search:
        alias: ezpublish.spi.search_engine

    ezpublish.spi.search.indexer:
        alias: ezpublish.spi.search_engine.indexer

    ezpublish.spi.search_engine:
        class: "%ezpublish.api.search_engine.class%"
        factory: ["@ezpublish.api.search_engine.factory", buildSearchEngine]
        public: false

    ezpublish.spi.search_engine.indexer:
        class: "%ezpublish.search.common.indexer.class%"
        factory: ["@ezpublish.api.search_engine.indexer.factory", buildSearchEngineIndexer]
        public: false

    # Redefine background indexer to the one provided here which works on kernel/console.terminate.
    ezpublish.search.background_indexer:
        class: eZ\Bundle\EzPublishCoreBundle\EventListener\BackgroundIndexingTerminateListener
        arguments:
            - '@ezpublish.api.persistence_handler'
            - '@ezpublish.spi.search'
        tags:
            - { name: kernel.event_subscriber }

    eZ\Publish\Core\FieldType\Image\ImageThumbnailStrategy:
        arguments:
            $variationHandler: '@ezpublish.image_alias.imagine.variation.imagine_alias_generator'
            $variationName: 'medium'

    eZ\Publish\Core\FieldType\ImageAsset\ImageAssetThumbnailStrategy:
        lazy: true
        arguments:
            $thumbnailStrategy: '@eZ\Publish\Core\Repository\Strategy\ContentThumbnail\ThumbnailChainStrategy'
            $contentService: '@ezpublish.api.service.content'

    eZ\Publish\Core\Repository\Strategy\ContentThumbnail\Field\ContentFieldStrategy:
        arguments:
            $strategies:
                ezimage: '@eZ\Publish\Core\FieldType\Image\ImageThumbnailStrategy'
                ezimageasset: '@eZ\Publish\Core\FieldType\ImageAsset\ImageAssetThumbnailStrategy'

    eZ\Publish\Core\Repository\Strategy\ContentThumbnail\FirstMatchingFieldStrategy:
        arguments:
            $fieldTypeService: '@ezpublish.api.service.field_type'
            $contentFieldStrategy: '@eZ\Publish\Core\Repository\Strategy\ContentThumbnail\Field\ContentFieldStrategy'
        tags:
            - { name: kernel.thumbnail_strategy, priority: 0 }

    eZ\Publish\Core\Repository\Strategy\ContentThumbnail\ThumbnailChainStrategy:
        arguments:
            $strategies: !tagged_iterator kernel.thumbnail_strategy

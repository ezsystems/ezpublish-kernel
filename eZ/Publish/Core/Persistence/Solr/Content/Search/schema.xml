<?xml version="1.0" encoding="UTF-8" ?>
<!--
This is the Solr schema file. This file should be named "schema.xml" and should
be in the conf directory under the solr home (i.e. ./solr/conf/schema.xml by
default) or located where the classloader for the Solr webapp can find it.

It provides the default types and definitions for a functional Solr based
search in eZ Publish 5. You may extend it with your own definitions, but you
should not remove or drastically change the existing definitions.
-->

<schema name="eZ Publish 5 base schema" version="1.5">
  <types>
    <!--
      Default types by Solr. Will be reused for dynamic fields.
    -->
    <fieldType name="string" class="solr.TextField" sortMissingLast="true">
      <analyzer type="index">
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="identifier" class="solr.StrField" sortMissingLast="true" />
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
    <fieldtype name="binary" class="solr.BinaryField"/>
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>

    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />
    <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>
    <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>

    <fieldType name="currency" class="solr.CurrencyField" precisionStep="8" defaultCurrency="USD" currencyConfig="currency.xml" />

    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="html" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <charFilter class="solr.HTMLStripCharFilterFactory" escapedTags="a, title" />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.HTMLStripCharFilterFactory" escapedTags="a, title" />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
  </types>


  <fields>
    <!--
      Required ID field.
    -->
    <field name="id" type="string" indexed="true" stored="true" required="true"/>

    <!--
      Field to store serialized content object, so that we do not need to
      reconstruct it from the database.
    -->
    <field name="ez_content_binary" type="binary" indexed="false" stored="true" required="false"/>

    <!--
      Always contains the date a document was added to the index. Might be
      useful.
    -->
    <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>

    <!--
      Dynamic field definitions.  If a field name is not found, dynamicFields
      will be used if the name matches any of the patterns.  RESTRICTION: the
      glob-like pattern in the name attribute must have a "*" only at the start
      or the end.  EXAMPLE:  name="*_i" will match any field ending in _i (like
      myid_i, z_i) Longer patterns will be matched first.  if equal size
      patterns both match, the first appearing in the schema will be used.
    -->
    <dynamicField name="*_i" type="int" indexed="true" stored="true"/>
    <dynamicField name="*_id" type="identifier" indexed="true" stored="true"/>
    <dynamicField name="*_mid" type="identifier" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_s" type="string" indexed="true" stored="true"/>
    <dynamicField name="*_ms" type="string" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_l" type="long" indexed="true" stored="true"/>
    <dynamicField name="*_t" type="text" indexed="true" stored="true"/>
    <dynamicField name="*_h" type="html" indexed="true" stored="false"/>
    <dynamicField name="*_b" type="boolean" indexed="true" stored="true"/>
    <dynamicField name="*_mb" type="boolean" indexed="true" stored="true" multiValued="true"/>
    <dynamicField name="*_f" type="float" indexed="true" stored="true"/>
    <dynamicField name="*_d" type="double" indexed="true" stored="true"/>
    <dynamicField name="*_dt" type="date" indexed="true" stored="true"/>
    <dynamicField name="*_p" type="location" indexed="true" stored="true"/>
    <dynamicField name="*_c" type="currency" indexed="true" stored="true"/>

    <field name="text" type="text" indexed="true" multiValued="true" stored="false"/>

    <!--
      Index all text, html and string fields in full text index
    -->
    <copyField source="*_t" dest="text" />
    <copyField source="*_s" dest="text" />
    <copyField source="*_h" dest="text" />

    <!--
      This field is required since Solr 4
    -->
    <field name="_version_" type="long" indexed="true" stored="true" multiValued="false" />

    <!--
      This is additional custom example field. You can come up with similar
      fields on your own, if you require custome indexing / query rules.

      Instead of using the type "text" you might even want to define a custom
      type. In the custom type you can define your dedicated index and query
      rules. You can copy any existing fields into the custom field as seen
      below.
      
      In this case we copy the full user name and index it as a text field.
    -->
    <field name="custom_field" type="text" indexed="true" stored="false" required="false" multiValued="true" />
    <copyField source="user/first_name/value_ms" dest="custom_field" />
    <copyField source="user/last_name/value_ms" dest="custom_field" />

  </fields>

  <uniqueKey>id</uniqueKey>
  <defaultSearchField>id</defaultSearchField>
</schema>

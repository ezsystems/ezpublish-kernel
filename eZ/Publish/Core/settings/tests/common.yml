services:
    logger:
        class: Psr\Log\NullLogger

    Symfony\Component\EventDispatcher\EventDispatcher: ~
    Symfony\Contracts\EventDispatcher\EventDispatcherInterface: '@Symfony\Component\EventDispatcher\EventDispatcher'

    # By default use in-memory cache for tests to avoid disk IO but still make sure we tests cache clearing works
    ezpublish.cache_pool.driver:
        class: Symfony\Component\Cache\Adapter\ArrayAdapter
        arguments: [120, false]

    # Override Slug Converter service to expose mutating Service configuration
    ezpublish.persistence.slug_converter:
        class: eZ\Publish\API\Repository\Tests\Common\SlugConverter
        arguments:
            - '@ezpublish.api.storage_engine.transformation_processor'
            - []

    # Configure serializer required  Generic Field Type
    ezpublish.field_type.ezgeneric.value_serializer.symfony.normalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer

    ezpublish.field_type.ezgeneric.value_serializer.symfony.encoder:
        class: Symfony\Component\Serializer\Encoder\JsonEncoder

    ezpublish.field_type.ezgeneric.value_serializer.symfony.serializer:
        class: Symfony\Component\Serializer\Serializer
        arguments:
            - [ '@ezpublish.field_type.ezgeneric.value_serializer.symfony.normalizer' ]
            - [ '@ezpublish.field_type.ezgeneric.value_serializer.symfony.encoder' ]

    serializer:
        alias: ezpublish.field_type.ezgeneric.value_serializer.symfony.serializer

    eZ\Publish\SPI\Tests\Variation\InMemoryVariationHandler: ~
    eZ\Publish\SPI\Variation\VariationHandler: '@eZ\Publish\SPI\Tests\Variation\InMemoryVariationHandler'

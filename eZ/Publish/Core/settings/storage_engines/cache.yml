parameters:
    ezpublish.spi.persistence.cache.class: eZ\Publish\Core\Persistence\Cache\Handler
    ezpublish.spi.persistence.cache.abstractHandler.class: eZ\Publish\Core\Persistence\Cache\AbstractHandler
    ezpublish.spi.persistence.cache.sectionHandler.class: eZ\Publish\Core\Persistence\Cache\SectionHandler
    ezpublish.spi.persistence.cache.locationHandler.class: eZ\Publish\Core\Persistence\Cache\LocationHandler
    ezpublish.spi.persistence.cache.contentHandler.class: eZ\Publish\Core\Persistence\Cache\ContentHandler
    ezpublish.spi.persistence.cache.contentLanguageHandler.class: eZ\Publish\Core\Persistence\Cache\ContentLanguageHandler
    ezpublish.spi.persistence.cache.contentTypeHandler.class: eZ\Publish\Core\Persistence\Cache\ContentTypeHandler
    ezpublish.spi.persistence.cache.userHandler.class: eZ\Publish\Core\Persistence\Cache\UserHandler
    ezpublish.spi.persistence.cache.transactionhandler.class: eZ\Publish\Core\Persistence\Cache\TransactionHandler
    ezpublish.spi.persistence.cache.trashHandler.class: eZ\Publish\Core\Persistence\Cache\TrashHandler
    ezpublish.spi.persistence.cache.urlAliasHandler.class: eZ\Publish\Core\Persistence\Cache\UrlAliasHandler
    ezpublish.spi.persistence.cache.objectStateHandler.class: eZ\Publish\Core\Persistence\Cache\ObjectStateHandler
    ezpublish.spi.persistence.cache.urlHandler.class: eZ\Publish\Core\Persistence\Cache\URLHandler
    ezpublish.spi.persistence.cache.bookmarkHandler.class: eZ\Publish\Core\Persistence\Cache\BookmarkHandler
    ezpublish.spi.persistence.cache.notificationHandler.class: eZ\Publish\Core\Persistence\Cache\NotificationHandler
    ezpublish.spi.persistence.cache.userPreferenceHandler.class: eZ\Publish\Core\Persistence\Cache\UserPreferenceHandler
    ezpublish.spi.persistence.cache.persistenceLogger.class: eZ\Publish\Core\Persistence\Cache\PersistenceLogger
    # Make sure logging is only enabled for debug by default
    ezpublish.spi.persistence.cache.persistenceLogger.enableCallLogging: "%kernel.debug%"
    # Global in-memory settings, for meta data
    ezpublish.spi.persistence.cache.inmemory.ttl: 3000
    ezpublish.spi.persistence.cache.inmemory.limit: 100
    ezpublish.spi.persistence.cache.inmemory.enable: true
    # Global in-memory settings, for content in-memory cache
    ## TTL on purpose low to avoid getting outdated data in prod, in dev it will be x2 to account for debug overhead
    ezpublish.spi.persistence.cache.inmemory.content.ttl: 400
    ezpublish.spi.persistence.cache.inmemory.content.limit: 100
    ezpublish.spi.persistence.cache.inmemory.content.enable: true

services:
    # Setup cache pool, with InMemoryCacheAdapter as decorator
    ezpublish.cache_pool:
        class: eZ\Publish\Core\Persistence\Cache\Adapter\InMemoryClearingProxyAdapter
        arguments:
          - "@ezpublish.cache_pool.inner"
          - [ "@ezpublish.spi.persistence.cache.inmemory", "@ezpublish.spi.persistence.cache.inmemory.content" ]

    ezpublish.cache_pool.inner:
        public: false
        class: Symfony\Component\Cache\Adapter\TagAwareAdapter
        arguments: ["@ezpublish.cache_pool.driver"]

    # Note for tests: Default changed to in-memory Array cache in tests/common.yml by default, and opt in for redis
    # testing is defined in containerBuilder.php
    ezpublish.cache_pool.driver:
        public: false
        class: Symfony\Component\Cache\Adapter\FilesystemAdapter
        arguments: ["", 120]

    # Logger which logs info when in dev for Symfony web toolbar
    ezpublish.spi.persistence.cache.persistenceLogger:
        class: "%ezpublish.spi.persistence.cache.persistenceLogger.class%"
        arguments:
            - "%ezpublish.spi.persistence.cache.persistenceLogger.enableCallLogging%"

    # In-Memory cache pools
    ezpublish.spi.persistence.cache.inmemory:
        public: false
        class: eZ\Publish\Core\Persistence\Cache\InMemory\InMemoryCache
        arguments:
            - "%ezpublish.spi.persistence.cache.inmemory.ttl%"
            - "%ezpublish.spi.persistence.cache.inmemory.limit%"
            - "%ezpublish.spi.persistence.cache.inmemory.enable%"

    ezpublish.spi.persistence.cache.inmemory.content:
        public: false
        class: eZ\Publish\Core\Persistence\Cache\InMemory\InMemoryCache
        arguments:
            - "@=container.getParameter('kernel.debug') ? parameter('ezpublish.spi.persistence.cache.inmemory.content.ttl')  *2 : parameter('ezpublish.spi.persistence.cache.inmemory.content.ttl')"
            - "%ezpublish.spi.persistence.cache.inmemory.content.limit%"
            - "%ezpublish.spi.persistence.cache.inmemory.content.enable%"

    # SPI Persistence Cache Handlers, incl abstracts
    ezpublish.spi.persistence.cache.abstractHandler:
        class: "%ezpublish.spi.persistence.cache.abstractHandler.class%"
        abstract:  true
        arguments:
            - "@ezpublish.cache_pool"
            - "@ezpublish.api.storage_engine"
            - "@ezpublish.spi.persistence.cache.persistenceLogger"

    ezpublish.spi.persistence.cache.abstractInMemoryHandler:
        class: eZ\Publish\Core\Persistence\Cache\AbstractInMemoryHandler
        abstract:  true
        arguments:
            - "@ezpublish.cache_pool"
            - "@ezpublish.spi.persistence.cache.persistenceLogger"
            - "@ezpublish.spi.persistence.cache.inmemory"

    ezpublish.spi.persistence.cache.abstractInMemoryPersistenceHandler:
        parent: ezpublish.spi.persistence.cache.abstractInMemoryHandler
        class: eZ\Publish\Core\Persistence\Cache\AbstractInMemoryPersistenceHandler
        abstract:  true
        arguments: ["@ezpublish.api.storage_engine"]

    ezpublish.spi.persistence.cache.sectionHandler:
        class: "%ezpublish.spi.persistence.cache.sectionHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.locationHandler:
        class: "%ezpublish.spi.persistence.cache.locationHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractInMemoryPersistenceHandler
        arguments: # Overload argument to use content in-memory service
            index_2: '@ezpublish.spi.persistence.cache.inmemory.content'

    ezpublish.spi.persistence.cache.contentHandler:
        class: "%ezpublish.spi.persistence.cache.contentHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractInMemoryPersistenceHandler
        arguments: # Overload argument to use content in-memory service
            index_2: '@ezpublish.spi.persistence.cache.inmemory.content'

    ezpublish.spi.persistence.cache.contentLanguageHandler:
        class: "%ezpublish.spi.persistence.cache.contentLanguageHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractInMemoryPersistenceHandler

    ezpublish.spi.persistence.cache.contentTypeHandler:
        class: "%ezpublish.spi.persistence.cache.contentTypeHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractInMemoryPersistenceHandler

    ezpublish.spi.persistence.cache.userHandler:
        class: "%ezpublish.spi.persistence.cache.userHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractInMemoryPersistenceHandler

    ezpublish.spi.persistence.cache.transactionhandler:
        class: "%ezpublish.spi.persistence.cache.transactionhandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractInMemoryPersistenceHandler

    ezpublish.spi.persistence.cache.trashHandler:
        class: "%ezpublish.spi.persistence.cache.trashHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.urlAliasHandler:
        class: "%ezpublish.spi.persistence.cache.urlAliasHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.objectStateHandler:
        class: "%ezpublish.spi.persistence.cache.objectStateHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.urlHandler:
        class: "%ezpublish.spi.persistence.cache.urlHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.bookmarkHandler:
        class: "%ezpublish.spi.persistence.cache.bookmarkHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.notificationHandler:
        class: "%ezpublish.spi.persistence.cache.notificationHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractHandler

    ezpublish.spi.persistence.cache.userPreferenceHandler:
        class: "%ezpublish.spi.persistence.cache.userPreferenceHandler.class%"
        parent: ezpublish.spi.persistence.cache.abstractInMemoryPersistenceHandler

    ezpublish.spi.persistence.cache:
        class: "%ezpublish.spi.persistence.cache.class%"
        arguments:
            - "@ezpublish.api.storage_engine"
            - "@ezpublish.spi.persistence.cache.sectionHandler"
            - "@ezpublish.spi.persistence.cache.locationHandler"
            - "@ezpublish.spi.persistence.cache.contentHandler"
            - "@ezpublish.spi.persistence.cache.contentLanguageHandler"
            - "@ezpublish.spi.persistence.cache.contentTypeHandler"
            - "@ezpublish.spi.persistence.cache.userHandler"
            - "@ezpublish.spi.persistence.cache.transactionhandler"
            - "@ezpublish.spi.persistence.cache.trashHandler"
            - "@ezpublish.spi.persistence.cache.urlAliasHandler"
            - "@ezpublish.spi.persistence.cache.objectStateHandler"
            - "@ezpublish.spi.persistence.cache.urlHandler"
            - "@ezpublish.spi.persistence.cache.bookmarkHandler"
            - '@ezpublish.spi.persistence.cache.notificationHandler'
            - '@ezpublish.spi.persistence.cache.userPreferenceHandler'
            - "@ezpublish.spi.persistence.cache.persistenceLogger"

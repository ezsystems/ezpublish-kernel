parameters:
    ezpublish.fieldType.ezimage.io_legacy.class: eZ\Publish\Core\FieldType\Image\IO\Legacy
    ezpublish.fieldType.ezimage.pathGenerator.class: eZ\Publish\Core\FieldType\Image\PathGenerator\LegacyPathGenerator
    ezpublish.fieldType.ezbinaryfile.pathGenerator.class: eZ\Publish\Core\FieldType\BinaryBase\PathGenerator\LegacyPathGenerator
    ezpublish.fieldType.ezimage.io_service.options_provider.class: eZ\Publish\Core\FieldType\Image\IO\OptionsProvider

services:
    # Deprecated since 5.4. Use ezpublish.fieldType.ezimage.io_service.
    ezpublish.fieldType.ezimage.io:
        alias: ezpublish.fieldType.ezimage.io_service

    # Custom IOService with a proxy that handles the legacy prefix (images-versioned)
    ezpublish.fieldType.ezimage.io_service:
        class: "%ezpublish.fieldType.ezimage.io_legacy.class%"
        arguments:
            - "@ezpublish.fieldType.ezimage.io_service.published"
            - "@ezpublish.fieldType.ezimage.io_service.draft"
            - "@ezpublish.fieldType.ezimage.io_service.options_provider"

    ezpublish.fieldType.ezimage.io_service.options_provider:
        class: "%ezpublish.fieldType.ezimage.io_service.options_provider.class%"
        calls:
            - [ setVarDir, [ "%storage_dir%" ] ]
            - [ setDraftImagesDir, [ "%image_draft_storage_prefix%" ] ]
            - [ setPublishedImagesDir, [ "%image_storage_prefix%" ] ]

    ezpublish.fieldType.ezimage.io_service.published:
        parent: ezpublish.core.io.service
        calls:
            - [ setPrefix, [ "%image_storage_prefix%" ] ]

    # Used to manipulate images with a legacy 'images-versioned' path
    ezpublish.fieldType.ezimage.io_service.draft:
        parent: ezpublish.core.io.service
        calls:
            - [ setPrefix, [ "%image_draft_storage_prefix%" ] ]

    ezpublish.fieldType.ezimage.pathGenerator:
        class: "%ezpublish.fieldType.ezimage.pathGenerator.class%"

    # BinaryFile
    ezpublish.fieldType.ezbinaryfile.io_service:
        parent: ezpublish.core.io.service
        calls:
            - [ setPrefix, [ "%binaryfile_storage_prefix%" ] ]

    ezpublish.fieldType.ezbinaryfile.pathGenerator:
        class: "%ezpublish.fieldType.ezbinaryfile.pathGenerator.class%"

    # Symfony 3.4+ service definitions:
    eZ\Publish\Core\FieldType\ImageAsset\AssetMapper:
        arguments:
            $contentService: '@ezpublish.api.service.content'
            $locationService: '@ezpublish.api.service.location'
            $contentTypeService: '@ezpublish.api.service.content_type'
            $mappings: '$fieldtypes.ezimageasset.mappings$'

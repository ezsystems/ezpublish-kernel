language: php

# run tests on php misc php versions
php:
  - 5.4
  - 5.5
  - 5.6
  - hhvm

# execute unit tests, integration test stubs and integration tests using legacy storage engine
env:
  global:
    - DB_NAME="testdb"
  matrix:
    # If SYMFONY_VERSION is not specified, will take the latest available.
    - TEST_CONFIG="phpunit.xml"
    - TEST_CONFIG="phpunit.xml" SYMFONY_VERSION="2.3.*"
    - TEST_CONFIG="phpunit-integration-legacy.xml"
    - TEST_CONFIG="phpunit-integration-legacy.xml" DB="postgresql" DATABASE="pgsql://postgres@localhost/$DB_NAME" SYMFONY_VERSION="2.3.*"
    - TEST_CONFIG="phpunit-integration-legacy.xml" DB="mysql" DATABASE="mysql://root@localhost/$DB_NAME" SYMFONY_VERSION="2.3.*"
    - SOLR_VERSION="4.7.2" TEST_CONFIG="phpunit-integration-legacy-solr.xml" SYMFONY_VERSION="2.3.*"
    - ELASTICSEARCH_VERSION="1.3.1" TEST_CONFIG="phpunit-integration-legacy-elasticsearch.xml" SYMFONY_VERSION="2.3.*"

matrix:
  allow_failures:
    - php: hhvm
      env: TEST_CONFIG="phpunit.xml"
    - php: hhvm
      env: TEST_CONFIG="phpunit-integration-legacy.xml"
  exclude:
# 5.4 run: unit test + postgres integration test
    - php: 5.4
      env: TEST_CONFIG="phpunit.xml" SYMFONY_VERSION="2.3.*"
    - php: 5.4
      env: TEST_CONFIG="phpunit-integration-legacy.xml"
    - php: 5.4
      env: TEST_CONFIG="phpunit-integration-legacy.xml" DB="mysql" DATABASE="mysql://root@localhost/$DB_NAME" SYMFONY_VERSION="2.3.*"
    - php: 5.4
      env: SOLR_VERSION="4.7.2" TEST_CONFIG="phpunit-integration-legacy-solr.xml" SYMFONY_VERSION="2.3.*"
    - php: 5.4
      env: ELASTICSEARCH_VERSION="1.3.1" TEST_CONFIG="phpunit-integration-legacy-elasticsearch.xml" SYMFONY_VERSION="2.3.*"
# 5.5 run: unit test (Symfony 2.3) + mysql integration test + solr 4.x integration test
    - php: 5.5
      env: TEST_CONFIG="phpunit.xml"
    - php: 5.5
      env: TEST_CONFIG="phpunit-integration-legacy.xml"
    - php: 5.5
      env: TEST_CONFIG="phpunit-integration-legacy.xml" DB="postgresql" DATABASE="pgsql://postgres@localhost/$DB_NAME" SYMFONY_VERSION="2.3.*"
# 5.6 run: unit test + sqlite integration test
    - php: 5.6
      env: TEST_CONFIG="phpunit.xml" SYMFONY_VERSION="2.3.*"
    - php: 5.6
      env: TEST_CONFIG="phpunit-integration-legacy.xml" DB="postgresql" DATABASE="pgsql://postgres@localhost/$DB_NAME" SYMFONY_VERSION="2.3.*"
    - php: 5.6
      env: TEST_CONFIG="phpunit-integration-legacy.xml" DB="mysql" DATABASE="mysql://root@localhost/$DB_NAME" SYMFONY_VERSION="2.3.*"
    - php: 5.6
      env: SOLR_VERSION="4.7.2" TEST_CONFIG="phpunit-integration-legacy-solr.xml" SYMFONY_VERSION="2.3.*"
    - php: 5.6
      env: ELASTICSEARCH_VERSION="1.3.1" TEST_CONFIG="phpunit-integration-legacy-elasticsearch.xml" SYMFONY_VERSION="2.3.*"
# hhvm run: unit test + sqlite integration test
    - php: hhvm
      env: TEST_CONFIG="phpunit.xml" SYMFONY_VERSION="2.3.*"
    - php: hhvm
      env: TEST_CONFIG="phpunit-integration-legacy.xml" DB="postgresql" DATABASE="pgsql://postgres@localhost/$DB_NAME" SYMFONY_VERSION="2.3.*"
    - php: hhvm
      env: TEST_CONFIG="phpunit-integration-legacy.xml" DB="mysql" DATABASE="mysql://root@localhost/$DB_NAME" SYMFONY_VERSION="2.3.*"
    - php: hhvm
      env: SOLR_VERSION="4.7.2" TEST_CONFIG="phpunit-integration-legacy-solr.xml" SYMFONY_VERSION="2.3.*"
    - php: hhvm
      env: ELASTICSEARCH_VERSION="1.3.1" TEST_CONFIG="phpunit-integration-legacy-elasticsearch.xml" SYMFONY_VERSION="2.3.*"

# test only master (+ Pull requests)
branches:
  only:
    - master

# setup requirements for running unit tests
before_script:
  - if [ $DB == "mysql" ]; then mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;" -uroot ; fi
  - if [ $DB == "postgresql" ]; then psql -c "CREATE DATABASE $DB_NAME;" -U postgres ; psql -c "CREATE EXTENSION pgcrypto;" -U postgres $DB_NAME ; fi
  - ./composer_install_github_key.sh
  - if [ $SYMFONY_VERSION != "" ]; then composer require --no-update symfony/symfony=$SYMFONY_VERSION; fi;
  - composer install --dev --prefer-source
  - if [ "$TEST_CONFIG" == "phpunit-integration-legacy-elasticsearch.xml" ] ; then ./travis-elasticsearch.sh ; fi
  - "if [ \"$TEST_CONFIG\" = \"phpunit-integration-legacy-solr.xml\" ] ; then curl -L https://raw.github.com/moliware/travis-solr/master/travis-solr.sh | SOLR_CONFS=eZ/Publish/Core/Persistence/Solr/Content/Search/schema.xml bash ; fi"
 # Detecting timezone issues by testing on random timezone
  - TEST_TIMEZONES=("America/New_York" "Asia/Calcutta" "UTC")
  - TEST_TIMEZONE=${TEST_TIMEZONES["`shuf -i 0-2 -n 1`"]}
  - echo "$TEST_TIMEZONE"

# execute phpunit as the script command
script: "phpunit -d date.timezone=$TEST_TIMEZONE -d memory_limit=-1 -c $TEST_CONFIG"

# disable mail notifications
notification:
  email: false

# reduce depth (history) of git checkout
git:
  depth: 30
